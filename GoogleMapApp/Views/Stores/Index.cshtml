@model IEnumerable<GoogleMapApp.Models.Store>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Address)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.longitude)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.latitude)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Address)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.longitude)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.latitude)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
@* 1) include the map script *@

<script src="~/lib/leaflet/leaflet.js"></script>
<script src="~/lib/leaflet/leaflet.min.js"></script> 

@* 2) build the map *@

<div id="map" style="width:100%;height:400px"></div>
<script>
    var map = L.map('map').setView([32.0213,35.0],8) // 8 is zome
    // draw the map
   // 3) Adding leaflet map as client library into our project.

    L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
    }).addTo(map);

    // 4) Converting the C# Model to JS model  
    // convsert the data base table to Array in json type
    var jsModel = @Html.Raw(Json.Serialize(Model))

    // 5) Add Marker for each Store (for each elemnt in jsModel Array)
        for (i in jsModel) 
        {
            item = jsModel[i]
            L.marker([item.longitude, item.latitude]).addTo(map)
            .bindPopup(item.name +'<br>' + item.address)
            .openPopup();
        }
</script>