@model IEnumerable<GoogleMapApp.Models.Store>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Address)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.longitude)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.latitude)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Address)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.longitude)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.latitude)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>

 
<!-- Reference to the Bing Maps SDK -->
<script type='text/javascript'
        src='https://www.bing.com/api/maps/mapcontrol?callback=GetMap&key=[ArTYnXAo5ajG1e4ZyFIV-LT3sW_IU0Uy2YETN7N-u5EdkJOaOwaft6BOA1SPlVfA]'
        async defer>
</script>
 
<div id="myMap" style='position:relative;width:600px;height:400px;' onload="GetMap();"></div>
<div id="mapDblClick">dblclick</div>
<div id="output"></div>
<div id='searchBoxContainer'>
    <input type='text' id='searchBox' />
</div>

@* var map = new Microsoft.Maps.Map('#myMap'); *@
<script type='text/javascript'>
    function GetMap() 
    {

        //You can customize the map as you load it. 
        // Use the following code to update how the map is loaded in the GetMap function such that it sets the type to aerial, 
        // the zoom level to 10, and the map center over London, UK (51.50632, -0.12714).
        var map = new Microsoft.Maps.Map('#myMap', {
            credentials: 'ArTYnXAo5ajG1e4ZyFIV-LT3sW_IU0Uy2YETN7N-u5EdkJOaOwaft6BOA1SPlVfA',
            center: new Microsoft.Maps.Location(51.50632, -0.12714),
            mapTypeId: Microsoft.Maps.MapTypeId.aerial,
            zoom: 10
        });


        //Add mouse events to the map.
        Microsoft.Maps.Events.addHandler(map, 'dblclick', function () { highlight('mapDblClick'); });

        function highlight(id) 
        {
            //Highlight the div to indicate that the event has fired.
            document.getElementById(id).style.background = 'LightGreen';

            //Remove the highlighting after a second.
            setTimeout(function () { document.getElementById(id).style.background = 'white'; }, 1000);
        }


        //////////////////Pushpins, sometimes known as MapIcons or Markers,
        // are the primary method in the Bing Maps V8 Map Control to add a graphical image and text at a location within the map.
        //Create custom Pushpin
        // هنا يمكننا وضع الاحداثيات بدل سينتر لتثبيت ماركر
        var center = map.getCenter();
        var pin = new Microsoft.Maps.Pushpin(center, {
            
            color: 'red',
            title: 'Microsoft',
            subTitle: 'City Center',
            text: '1'
        }); 
        
        //Add the pushpin to the map
        map.entities.push(pin);

        /////////////////////////هذه النافذة التي تظهر على الموقع وهو يشبه صندوق وصف 
        //Create an infobox that will render in the center of the map.
        var myloc = new Microsoft.Maps.Location(51.60632, -0.12914);
        var infobox = new Microsoft.Maps.Infobox(myloc, {
            title: 'Map Center',
            description: 'Seattle'
        });

        //Assign the infobox to a map instance.
        infobox.setMap(map);


        ///////////////////////This example shows how to request the user’s location and then display it on the map using a pushpin.

        //Load the spatial math module
        Microsoft.Maps.loadModule("Microsoft.Maps.SpatialMath", function () {
            //Request the user's location
            navigator.geolocation.getCurrentPosition(function (position) {
                var loc = new Microsoft.Maps.Location(position.coords.latitude, position.coords.longitude);

                //Create an accuracy circle
                var path = Microsoft.Maps.SpatialMath.getRegularPolygon(loc, position.coords.accuracy, 36, Microsoft.Maps.SpatialMath.Meters);
                var poly = new Microsoft.Maps.Polygon(path);
                map.entities.push(poly);

                //Add a pushpin at the user's location.
                var pin = new Microsoft.Maps.Pushpin(loc);
                map.entities.push(pin);

                //Center the map on the user's location.
                // map.setView({ center: loc, zoom: 10 });
            });
        });
    
    } // end of Getmap()

    
    
</script>